(ns leiningen.sass
  (:require [robert.hooke :as hooke]
            [leiningen.help :as lhelp]
            [leiningen.clean :as lclean]
            [leiningen.compile :as lcompile]
            [leiningen.core.main :as lmain]
            [leiningen.utils :as utils]
            [leiningen.render :as render]
            [leiningen.cleaner :as cleaner]))

(defn- once
  [{:keys [targets] :as options}]
  (when (seq targets)
    (println "Compiling files located in"
             (utils/targets->str (:targets options)))
    (render/render options)))

(defn- compile-hook
  [task & args]
  (apply task args)
  (once (utils/normalize-options (:sass (first args)))))

(defn- watch
  [options]
  (println "Ready to compile files located in"
           (utils/targets->str (:targets options)))
  (render/render (assoc options :watch true)))

(defn- clean
  [{:keys [targets] :as options}]
  (when (seq targets)
    (println "Deleting files generated by lein-sass in"
             (utils/targets->str (:targets options)))
    (cleaner/clean-all! options)))

(defn- clean-hook
  [task & args]
  (apply task args)
  (clean (utils/normalize-options (:sass (first args)))))

(defn- abort
  [s]
  (println s)
  (lmain/abort))

(defn sass
  {:help-arglists '([once auto clean]) :subtasks [#'once #'watch #'clean]}
  ([_]
   (abort (lhelp/help-for "sass")))
  ([project subtask & _args]
   (let [options (utils/normalize-options (:sass project))]
     (case (keyword subtask)
       :once (once options)
       :watch (watch options)
       :clean (clean options)
       (abort (str "Subtask" \" subtask \" "not found. " (lhelp/subtask-help-for *ns* #'sass)))))))

(defn activate []
  (hooke/add-hook #'lclean/clean #'clean-hook)
  (hooke/add-hook #'lcompile/compile #'compile-hook))
